# Build stage - using the exact Go version from your go.mod
FROM golang:1.24.3-alpine AS builder

WORKDIR /app

# 1. Copy only dependency files first for caching
COPY go.mod go.sum ./

# 2. Download dependencies
RUN go mod download

# 3. Copy all other source files
COPY pkg/ pkg/
COPY internal/ internal/
COPY cmd/ cmd/

# 4. Build the application
RUN CGO_ENABLED=0 GOOS=linux go build \
    -ldflags="-w -s" \
    -o /payment-service \
    ./cmd/api/main.go

# Final stage
FROM alpine:3.18

WORKDIR /app

# 1. Copy compiled binary
COPY --from=builder /payment-service .

# 2. Copy configuration files (adjust if your configs are elsewhere)
COPY --from=builder /app/internal/config /app/config

# 3. Install runtime dependencies
RUN apk --no-cache add \
    ca-certificates \
    tzdata

EXPOSE 8080

# Entrypoint (adjust config path as needed)
CMD ["/app/payment-service", "--config", "/app/config"]